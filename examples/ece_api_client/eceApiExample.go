package main

import (
	"encoding/json"
	"github.com/elastic/cloud-sdk-go/pkg/api"
	"github.com/elastic/cloud-sdk-go/pkg/api/deploymentapi"
	"github.com/elastic/cloud-sdk-go/pkg/auth"
	"github.com/elastic/cloud-sdk-go/pkg/client/deployments"
	"log"
	"net/http"
	"os"
)

func main() {
	var encoder = json.NewEncoder(os.Stdout)

	// Create new auth config to use ECE credentials
	// TODO: Read the credentials from environment variables
	configuration := auth.Config{Username: "admin",
		Password: "5gQOAfOIhvN4DgvEFQBFON8LdhDqOtJKfZ3jp46NYSG",
	}

	// New AuthWriter
	eceAuthWriter, _ := auth.NewAuthWriter(configuration)

	// Create new ECE API instance
	ece, err := api.NewAPI(api.Config{AuthWriter: eceAuthWriter,
		Client: new(http.Client),
		Host:   "http://192.168.2.47:12400", // TODO: Read this value from environment variable
		VerboseSettings: api.VerboseSettings{
			Device:     os.Stdout,
			Verbose:    false, // TODO: Read this from environment variable
			RedactAuth: false,
		},
		ErrorDevice: os.Stdout,
	})
	if err != nil {
		log.Fatalf("could not create ECE API instance: %v", err)
	}

	// List Deployments using autogenerated APIs
	allDeployments, err := ece.V1API.Deployments.ListDeployments(deployments.NewListDeploymentsParams(), ece.AuthWriter)
	if err != nil {
		log.Fatalf("could not list deployments through v1API: %v", err)
	}
	// Encoding api results will return JSON output
	if err := encoder.Encode(allDeployments); err != nil {
		panic(err)
	}

	// List Deployments using deploymentapi package. (Recommended way)
	// Reference: https://pkg.go.dev/github.com/elastic/cloud-sdk-go@v1.1.0/pkg/api
	res, err := deploymentapi.List(deploymentapi.ListParams{
		API: ece})
	if err != nil {
		log.Fatalf("could not list deployments: %v", err)
	}

	if err := encoder.Encode(res); err != nil {
		panic(err)
	}
}
